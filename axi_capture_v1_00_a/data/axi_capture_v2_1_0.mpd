###################################################################
##
## Name     : axi_capture
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN axi_capture

## Peripheral Options
OPTION IMP_NETLIST = TRUE
OPTION IPTYPE = PERIPHERAL
OPTION STYLE = HDL
OPTION RUN_NGCBUILD = TRUE
#OPTION IPLEVEL_DRC_PROC = axi_monitor_drc
#OPTION SYSLEVEL_DRC_PROC = check_syslevel_icon_connect
#OPTION ELABORATE_PROC = axi_monitor_generate
#OPTION LAST_UPDATED = 14.2
OPTION HDL = VHDL
OPTION IP_GROUP = MICROBLAZE:USER
OPTION DESC = AXI_CAPTURE
OPTION ARCH_SUPPORT_MAP = (others=DEVELOPMENT)


## Bus Interfaces
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = CAPT_AXI, BUS_STD = AXI, BUS_TYPE = MONITOR

BUS_INTERFACE BUS = M_AXIS_CP2DMA, BUS_STD = AXIS, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = TIME_AXIS, BUS_STD = AXIS, BUS_TYPE = TARGET

## Generics for VHDL or Parameters for Verilog
PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_MIN_SIZE = 0x000001ff, DT = std_logic_vector, BUS = S_AXI
PARAMETER C_USE_WSTRB = 0, DT = INTEGER
PARAMETER C_DPHASE_TIMEOUT = 8, DT = INTEGER
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, MIN_SIZE = 0x100, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI
PARAMETER C_FAMILY = virtex6, DT = STRING
PARAMETER C_NUM_REG = 1, DT = INTEGER
PARAMETER C_NUM_MEM = 1, DT = INTEGER
PARAMETER C_SLV_AWIDTH = 32, DT = INTEGER
PARAMETER C_SLV_DWIDTH = 32, DT = INTEGER
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, DT = STRING, BUS = S_AXI

PARAMETER C_CAPT_AXI_DATA_WIDTH     = 32, DT = INTEGER, BUS = CAPT_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_CAPT_AXI_ADDR_WIDTH     = 32, DT = INTEGER, BUS = CAPT_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_AXIS_DMA_TDATA_WIDTH    = 32, DT = INTEGER, BUS = M_AXIS_CP2DMA, ASSIGNMENT = CONSTANT##, RANGE = [32, 64, 128, 256, 512]
PARAMETER C_CAPT_AXI_ID_WIDTH       = 1, DT = INTEGER, BUS = CAPT_AXI
PARAMETER C_RDATA_FIFO_DEPTH        = 0, DT = INTEGER
PARAMETER C_INCLUDE_TIMEOUT_CNT     = 1, DT = INTEGER
PARAMETER C_TIMEOUT_CNTR_VAL        = 8, DT = INTEGER
PARAMETER C_ALIGN_BE_RDADDR         = 0, DT = INTEGER
PARAMETER C_CAPT_AXI_SUPPORTS_WRITE = 1, DT = INTEGER, BUS = CAPT_AXI
PARAMETER C_CAPT_AXI_SUPPORTS_READ  = 1, DT = INTEGER, BUS = CAPT_AXI
PARAMETER C_FAMILY                  = virtex6, DT = STRING
PARAMETER C_M_AXIS_CP2DMA_PROTOCOL = XIL_AXI_STREAM_ETH_DATA, DT = STRING, BUS = M_AXIS_CP2DMA, ASSIGNMENT = CONSTANT,  TYPE = NON_HDL

## Ports
PORT s_axi_aclk = "", DIR = I, SIGIS = CLK, BUS = S_AXI
PORT s_axi_aresetn = "", DIR = I, SIGIS = RST
PORT S_AXI_AWADDR = AWADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_AWVALID = AWVALID, DIR = I, BUS = S_AXI
PORT S_AXI_WDATA = WDATA, DIR = I, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WSTRB = WSTRB, DIR = I, VEC = [((C_S_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WVALID = WVALID, DIR = I, BUS = S_AXI
PORT S_AXI_BREADY = BREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARADDR = ARADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_ARVALID = ARVALID, DIR = I, BUS = S_AXI
PORT S_AXI_RREADY = RREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARREADY = ARREADY, DIR = O, BUS = S_AXI
PORT S_AXI_RDATA = RDATA, DIR = O, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_RVALID = RVALID, DIR = O, BUS = S_AXI
PORT S_AXI_WREADY = WREADY, DIR = O, BUS = S_AXI
PORT S_AXI_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_BVALID = BVALID, DIR = O, BUS = S_AXI
PORT S_AXI_AWREADY = AWREADY, DIR = O, BUS = S_AXI

PORT CAPT_AXI_ACLK    = "", DIR = I, SIGIS = CLK, BUS = CAPT_AXI
PORT CAPT_AXI_ARESETN = ARESETN, DIR = I, SIGIS = RST, BUS = CAPT_AXI
PORT CAPT_AXI_AWADDR  = AWADDR, DIR = I, VEC = [(C_CAPT_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = CAPT_AXI
PORT CAPT_AXI_AWVALID = AWVALID, DIR = I, BUS = CAPT_AXI
PORT CAPT_AXI_WDATA   = WDATA, DIR = I, VEC = [(C_CAPT_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = CAPT_AXI
PORT CAPT_AXI_WSTRB   = WSTRB, DIR = I, VEC = [((C_CAPT_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = CAPT_AXI
PORT CAPT_AXI_WVALID  = WVALID, DIR = I, BUS = CAPT_AXI
PORT CAPT_AXI_BREADY  = BREADY, DIR = I, BUS = CAPT_AXI
PORT CAPT_AXI_ARADDR  = ARADDR, DIR = I, VEC = [(C_CAPT_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = CAPT_AXI
PORT CAPT_AXI_ARVALID = ARVALID, DIR = I, BUS = CAPT_AXI
PORT CAPT_AXI_RREADY  = RREADY, DIR = I, BUS = CAPT_AXI
PORT CAPT_AXI_ARREADY = ARREADY, DIR = I, BUS = CAPT_AXI
PORT CAPT_AXI_RDATA   = RDATA, DIR = I, VEC = [(C_CAPT_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = CAPT_AXI
PORT CAPT_AXI_RRESP   = RRESP, DIR = I, VEC = [1:0], BUS = CAPT_AXI
PORT CAPT_AXI_RVALID  = RVALID, DIR = I, BUS = CAPT_AXI
PORT CAPT_AXI_WREADY  = WREADY, DIR = I, BUS = CAPT_AXI
PORT CAPT_AXI_BRESP   = BRESP, DIR = I, VEC = [1:0], BUS = CAPT_AXI
PORT CAPT_AXI_BVALID  = BVALID, DIR = I, BUS = CAPT_AXI
PORT CAPT_AXI_AWREADY = AWREADY, DIR = I, BUS = CAPT_AXI
PORT CAPT_AXI_AWID    = AWID, DIR = I, VEC = [(C_CAPT_AXI_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = CAPT_AXI
PORT CAPT_AXI_AWLEN   = AWLEN, DIR = I, VEC = [7:0], BUS = CAPT_AXI
PORT CAPT_AXI_AWSIZE  = AWSIZE, DIR = I, VEC = [2:0], BUS = CAPT_AXI
PORT CAPT_AXI_AWBURST = AWBURST, DIR = I, VEC = [1:0], BUS = CAPT_AXI
PORT CAPT_AXI_AWLOCK  = AWLOCK, DIR = I, BUS = CAPT_AXI
PORT CAPT_AXI_AWCACHE = AWCACHE, DIR = I, VEC = [3:0], BUS = CAPT_AXI
PORT CAPT_AXI_AWPROT  = AWPROT, DIR = I, VEC = [2:0], BUS = CAPT_AXI
PORT CAPT_AXI_WLAST   = WLAST, DIR = I, BUS = CAPT_AXI
PORT CAPT_AXI_BID     = BID, DIR = I, VEC = [(C_CAPT_AXI_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = CAPT_AXI
PORT CAPT_AXI_ARID    = ARID, DIR = I, VEC = [(C_CAPT_AXI_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = CAPT_AXI
PORT CAPT_AXI_ARLEN   = ARLEN, DIR = I, VEC = [7:0], BUS = CAPT_AXI
PORT CAPT_AXI_ARSIZE  = ARSIZE, DIR = I, VEC = [2:0], BUS = CAPT_AXI
PORT CAPT_AXI_ARBURST = ARBURST, DIR = I, VEC = [1:0], BUS = CAPT_AXI
PORT CAPT_AXI_ARLOCK  = ARLOCK, DIR = I, BUS = CAPT_AXI
PORT CAPT_AXI_ARCACHE = ARCACHE, DIR = I, VEC = [3:0], BUS = CAPT_AXI
PORT CAPT_AXI_ARPROT  = ARPROT, DIR = I, VEC = [2:0], BUS = CAPT_AXI
PORT CAPT_AXI_RID     = RID, DIR = I, VEC = [(C_CAPT_AXI_ID_WIDTH-1):0], ENDIAN = LITTLE, BUS = CAPT_AXI
PORT CAPT_AXI_RLAST   = RLAST, DIR = I, BUS = CAPT_AXI

PORT AXIS_DMA_TDATA   = TDATA, DIR = O, VEC = [C_AXIS_DMA_TDATA_WIDTH-1:0], BUS = M_AXIS_CP2DMA, ENDIAN = LITTLE
PORT AXIS_DMA_TKEEP   = TKEEP, DIR = O, VEC = [(C_AXIS_DMA_TDATA_WIDTH/8)-1:0], BUS = M_AXIS_CP2DMA, ENDIAN = LITTLE
PORT AXIS_DMA_TLAST   = TLAST, DIR = O, BUS = M_AXIS_CP2DMA
PORT AXIS_DMA_TUSER   = TUSER, DIR = O, VEC = [3:0], BUS = M_AXIS_CP2DMA, ENDIAN = LITTLE
PORT AXIS_DMA_TVALID  = TVALID, DIR = O, BUS = M_AXIS_CP2DMA
PORT AXIS_DMA_TREADY  = TREADY, DIR = I, BUS = M_AXIS_CP2DMA
PORT AXIS_DMA_TID     = TID, DIR = O, VEC = [4:0], BUS = M_AXIS_CP2DMA, ENDIAN = LITTLE
PORT AXIS_DMA_TDEST   = TDEST, DIR = O, VEC = [4:0], BUS = M_AXIS_CP2DMA, ENDIAN = LITTLE

PORT TIME_AXIS_TLAST  = TLAST, DIR = I, BUS = TIME_AXIS
PORT TIME_AXIS_TVALID = TVALID, DIR = I, BUS = TIME_AXIS
PORT TIME_AXIS_TDATA  = TDATA, DIR = I, VEC = [63:0], BUS = TIME_AXIS

END
